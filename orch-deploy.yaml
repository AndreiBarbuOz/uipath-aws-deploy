AWSTemplateFormatVersion: "2010-09-09"
Description: "Codepipeline for testing CFN templates deploying UiPath Orchestrator"
Parameters:
  OrchRepositoryName:
    Type: String
    Description: Name of GitHub repository containing the source of CFN templates
    Default: uipath-aws-orchestrator
  GitHubOwner:
    Type: String
    Description: Name of GitHub account Owner
    Default: AndreiBarbuOz
  BranchName:
    Type: String
    Description: Name of the GitHub branch to use as the source of the pipeline
    Default: master
  GitHubOAuthToken:
    Description: 'Name of Parameter Store parameter storing the GitHub OAuth token'
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/uipath-orch/github-token'
  DeployStack:
    Description: UiPath Orchestrator stack name
    Type: String
    Default: uipath-orch-test
  OrchTopic:
    Type: String
    Description: Name of the SNS topic in same region to send Production approval notification.
    Default: 'orch-single-node-approval'
Resources:
  S3ArtifactStore:
    Type: AWS::S3::Bucket
  CodePipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: "CplPassRole"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "iam:PassRole"
                Resource:
                  - !GetAtt CloudFormationRole.Arn
        - PolicyName: "CplAccessS3Policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:DeleteObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                  - "s3:PutObject"
                  - "s3:GetBucketPolicy"
                Resource:
                  - Fn::Sub: arn:aws:s3:::${S3ArtifactStore}
                  - Fn::Sub: arn:aws:s3:::${S3ArtifactStore}/*
        - PolicyName: "CplCreateStack"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "cloudformation:*"
                Resource:
                  - "*"
        - PolicyName: "SnsPublish"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: "Allow"
              Action:
                - "sns:Publish"
              Resource:
                - Fn::Sub: arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${OrchTopic}        
  CloudFormationRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "cloudformation.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: "CfnAccessS3Policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:DeleteObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                  - "s3:PutObject"
                  - "s3:GetBucketPolicy"
                Resource:
                  - Fn::Sub: arn:aws:s3:::${S3ArtifactStore}
                  - Fn::Sub: arn:aws:s3:::${S3ArtifactStore}/*
        - PolicyName: "CfnCreatePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "ec2:*"
                  - "ecr:*"
                  - "iam:*"
                Resource:
                  - "*"
  OrchWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      Filters:
        - 
          JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref CodePipelineDeploy
      TargetAction: OrchSourceAction
      TargetPipelineVersion: !GetAtt CodePipelineDeploy.Version
      RegisterWithThirdParty: true
  SnsTopic:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: 'Approval for Orch single node'
      TopicName: !Ref OrchTopic
  CodePipelineDeploy:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location:
          Ref: S3ArtifactStore
      RoleArn: !GetAtt CodePipelineRole.Arn
      Name: orch-deploy
      Stages:
        - Name: GitHubSource
          Actions:
            - Name: OrchSourceAction
              ActionTypeId: 
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts: 
                - Name: OrchSource
              Configuration: 
                Owner: !Ref GitHubOwner
                Repo: !Ref OrchRepositoryName
                Branch: !Ref BranchName
                OAuthToken: !Ref GitHubOAuthToken
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployOrch
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              InputArtifacts:
                - Name: OrchSource
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                StackName: !Ref DeployStack
                RoleArn: !GetAtt CloudFormationRole.Arn
                TemplatePath: OrchSource::orch-single-node.yaml
                ParameterOverrides: |
                  {
                    "KeyName" : "aws-sydney"
                  }
              RunOrder: 1
            - Name: Approval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              Configuration:
                NotificationArn:
                  Fn::Sub: arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${OrchTopic}
                CustomData: Approve once orch has been deployed.
              RunOrder: 2
        - Name: Delete
          Actions:
            - Name: DeleteDeployStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              InputArtifacts:
                - Name: OrchSource
              Configuration:
                ActionMode: DELETE_ONLY
                StackName: !Ref DeployStack
                RoleArn: !GetAtt CloudFormationRole.Arn
              RunOrder: 1